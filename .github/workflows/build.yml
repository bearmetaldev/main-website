# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Build, test and deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - $default-branch
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/frontend/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/frontend/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: "frontend/package-lock.json"
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: cd frontend && ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: cd frontend && ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Build Docker image
        run: |
          docker build -t bearmetaldev-site:${{github.run_number}} frontend
          mkdir -p build/docker
          docker save -o build/docker/bearmetaldev-site.tar bearmetaldev-site:${{github.run_number}}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: build/docker/
          retention-days: 1

  # Deployment job
  deploy:
    environment:
      name: staging
      url: https://staging.bearmetaldev.com
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: docker-images
          path: ./build/docker

      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          sudo chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H staging.bearmetaldev.com > ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_KEY}}

      - name: Deploy to staging environment
        id: deployment
        run: |
          ssh dev@staging.bearmetaldev.com mkdir -p /home/dev/bearmetaldev.com/staging
          rsync -r -e "ssh -i ~/.ssh/id_rsa" build/docker/bearmetaldev-site.tar dev@staging.bearmetaldev.com:/home/dev/bearmetaldev.com/staging/bearmetaldev-site.tar
          ssh dev@staging.bearmetaldev.com docker load -i /home/dev/bearmetaldev.com/staging/bearmetaldev-site.tar
          ssh dev@staging.bearmetaldev.com docker tag bearmetaldev-site:${{github.run_number}} bearmetaldev-site:staging
          ssh dev@staging.bearmetaldev.com docker-compose -f bearmetaldev.com/staging/docker-compose.yml up -d          
